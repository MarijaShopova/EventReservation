@model EventReservation.Models.Event
@{
    ViewBag.Title = "Create";
}
@Scripts.Render("~/bundles/Jquery")

<script src="~/Scripts/multistep-form.js"></script>
<link href="~/Css/multistep-form.css" rel="stylesheet" />
<link href="~/Content/fontawesome-all.css" rel="stylesheet" />
<link rel="stylesheet" href="//code.jquery.com/ui/1.12.1/themes/base/jquery-ui.css">
<link href="~/Content/timepicki.css" rel="stylesheet" />
<script src="https://code.jquery.com/jquery-1.12.4.js"></script>
<script src="https://code.jquery.com/ui/1.12.1/jquery-ui.js"></script>
<script src="~/Content/timepicki.js"></script>
<script>
    $(function () {
        $("#datepicker").datepicker({ dateFormat: 'dd.mm.yy', minDate: 0 });
        $('#time_end').timepicki({
            show_meridian: false,
            min_hour_value: 0,
            max_hour_value: 23,
            step_size_minutes: 15,
            increase_direction: 'up',
            start_time: ["20", "00"]
        });
        $('#time_start').timepicki({
            show_meridian: false,
            min_hour_value: 0,
            max_hour_value: 23,
            step_size_minutes: 15,
            increase_direction: 'up',
            start_time: ["20", "00"]
        });
    });
</script>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <form class="form-horizontal form py-5 content main" name="form">
        <!-- Progressbar -->
        <ul class="progressbar">
            <li id="active1" class="li-multistep"><span><i class="fa fa-glass-martini fa-2x pr-2"></i></span></li>
            <li id="active2" class="li-multistep"><span><i class="fa fa-glass-martini fa-2x pl-2 pr-2"></i></span></li>
            <li id="active3" class="li-multistep"><span><i class="fa fa-glass-martini fa-2x pl-2"></i></span></li>
        </ul>
        <ul class="progressbar1">
            <li class="li-multistep"><span class="li-text">General Details</span></li>
            <li class="li-multistep"><span class="li-text" style="margin-left:-38px;">Time & Date</span></li>
            <li class="li-multistep"><span class="li-text" style="margin-left:-35px;">Additional Details</span></li>
        </ul>


        <fieldset id="first">
            <h5 class="title">General Details</h5>
            @Html.Hidden("LocalId", (object)ViewBag.LocalId)
            <div>
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                <div class="form-group">
                    @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "label-text" })
                    @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control", @id = "title" } })
                    @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger", @id = "valTitle" })
                </div>
            </div>
            <div>
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                <div class="form-group">
                    @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "label-text" })
                    @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control ", @id = "description" } })
                    @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger ", @id = "valDesc" })
                </div>
            </div>
            <div>
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                <div class="form-group">
                    @Html.LabelFor(model => model.Genre, htmlAttributes: new { @class = "label-text" })
                    @Html.EditorFor(model => model.Genre, new { htmlAttributes = new { @class = "form-control", @id = "genre" } })
                    @Html.ValidationMessageFor(model => model.Genre, "", new { @class = "text-danger ", @id = "valGenre" })
                </div>
            </div>
            <div>
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                <div class="form-group">
                    @Html.LabelFor(model => model.Performer, htmlAttributes: new { @class = "label-text" })
                    @Html.EditorFor(model => model.Performer, new { htmlAttributes = new { @class = "form-control", @id = "performer" } })
                    @Html.ValidationMessageFor(model => model.Performer, "", new { @class = "text-danger ", @id = "valPerformer" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.NoTables, htmlAttributes: new { @class = "label-text" })
                @Html.EditorFor(model => model.NoTables, new { htmlAttributes = new { @class = "form-control", @id = "tables" } })
                @Html.ValidationMessageFor(model => model.NoTables, "", new { @class = "text-danger" })

            </div>
            <p id="text-validation">All fields are mandatory</p>
            <input id="next_btn1" onclick="next_step1()" type="button" value="Next">
        </fieldset>

        <fieldset id="second">
            <h5 class="title">Date & Time</h5>
            <div>
                @Html.LabelFor(model => model.DateStart, htmlAttributes: new { @class = "label-text" })
                @Html.TextBoxFor(model => model.DateStart, htmlAttributes: new { @placeholder = "Select date", @id = "datepicker" })
            </div>
            <div>
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                <div class="form-group">
                    @Html.LabelFor(model => model.TimeStart, htmlAttributes: new { @class = "label-text" })
                    @Html.EditorFor(model => model.TimeStart, new { htmlAttributes = new { @class = "form-control", @id = "time_start", @placeholder = "hh:mm" } })
                </div>
            </div>
            <div>
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                <div class="form-group">
                    @Html.LabelFor(model => model.TimeEnd, htmlAttributes: new { @class = "label-text" })
                    @Html.EditorFor(model => model.TimeEnd, new { htmlAttributes = new { @class = "form-control", @id = "time_end", @placeholder = "hh:mm" } })
                </div>
            </div>
            <p id="text-validation">All fields are mandatory</p>
            <input id="pre_btn1" onclick="prev_step1()" type="button" value="Previous">
            <input id="next_btn2" name="next" onclick="next_step2()" type="button" value="Next">
        </fieldset>

        <fieldset id="third">
            <h5 class="title">Additional Details</h5>

            <div>
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                <div class="form-group">
                    @Html.LabelFor(model => model.HasTicket, htmlAttributes: new { @class = "label-text" })
                    @Html.RadioButton("HasTicket", true, htmlAttributes: new { @class = "ml-3" }) Yes
                    @Html.RadioButton("HasTicket", false, htmlAttributes: new { @class = "ml-3" }) No
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.TicketPrice, htmlAttributes: new { @class = "label-text" })
                @Html.EditorFor(model => model.TicketPrice, new { htmlAttributes = new { @class = "form-control", @id = "price" } })
                @Html.ValidationMessageFor(model => model.TicketPrice, "", new { @class = "text-danger" })
            </div>
            <p>Event Image</p>
            <p id="text-validation">All fields are mandatory</p>
            <input id="pre_btn2" onclick="prev_step2()" type="button" value="Previous">
            <input type="submit" value="Create" class="btn bg-imperial" style="color:#9fffcb;" />
        </fieldset>
    </form>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}