@model EventReservation.Models.Local

@{
    ViewBag.Title = "Create";
}
<script src="~/Scripts/multistep-formL.js"></script>
<link href="~/Css/multistep-form.css" rel="stylesheet" />

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

<div class="form-horizontal form py-5 content main" >

    <ul class="progressbar">
    <li id="active1" class="li-multistep"><span><i class="fa fa-glass-martini fa-2x pr-2"></i></span></li>
    <li id="active2" class="li-multistep"><span><i class="fa fa-glass-martini fa-2x pl-2 pr-2"></i></span></li>
    <li id="active3" class="li-multistep"><span><i class="fa fa-glass-martini fa-2x pl-2"></i></span></li>
    </ul>
    <ul class="progressbar1">
        <li class="li-multistep"><span class="li-text">General Details</span></li>
        <li class="li-multistep"><span class="li-text" style="margin-left:-38px;">Time & Date</span></li>
        <li class="li-multistep"><span class="li-text" style="margin-left:-35px;">Event Details</span></li>
    </ul>

    <fieldset id="first">
        <h5 class="title">General Details</h5>
        <div>
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="form-group">
                @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control", @id = "name" } })
                    @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                </div>
                <p id="NameH" class="hidden">Please enter the name of the local</p>
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control", @id = "desc" } })
                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
            </div>
            <p id="DescriptionH" class="hidden">Please enter the description</p>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.City, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.City, new { htmlAttributes = new { @class = "form-control", @id = "city" } })
                @Html.ValidationMessageFor(model => model.City, "", new { @class = "text-danger" })
                <p id="CityH" class="hidden">Please enter the city</p>
            </div>
        </div>

        <input id="next_btn1" onclick="validate_step1()" type="button" value="Next">
    </fieldset>




    <fieldset id="second">
        <h5 class="title">Date & Time</h5>
        <div class="form-group">
            @Html.LabelFor(model => model.StreetName, htmlAttributes: new { @class = "control-label col-md-2" })
            @Html.EditorFor(model => model.StreetName, new { htmlAttributes = new { @class = "form-control", @id = "street" } })
            @Html.ValidationMessageFor(model => model.StreetName, "", new { @class = "text-danger" })
            <p id="StreetH" class="hidden">Please enter the street</p>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.StreetNo, htmlAttributes: new { @class = "control-label col-md-2" })
            @Html.EditorFor(model => model.StreetNo, new { htmlAttributes = new { @class = "form-control", @id = "streetNo" } })
            @Html.ValidationMessageFor(model => model.StreetNo, "", new { @class = "text-danger" })
            <p id="StreetNoH" class="hidden">Please enter the street number</p>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.OpeningHour, htmlAttributes: new { @class = "control-label col-md-2" })
            @Html.EditorFor(model => model.OpeningHour, new { htmlAttributes = new { @class = "form-control", @id = "openingH" } })
            @Html.ValidationMessageFor(model => model.OpeningHour, "", new { @class = "text-danger" })
            <p id="OpenH" class="hidden">Please enter the opening hour</p>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ClosingHour, htmlAttributes: new { @class = "control-label col-md-2" })
            @Html.EditorFor(model => model.ClosingHour, new { htmlAttributes = new { @class = "form-control", @id = "closingH" } })
            @Html.ValidationMessageFor(model => model.ClosingHour, "", new { @class = "text-danger" })
            <p id="CloseH" class="hidden">Please enter the closing hour</p>
        </div>
      
        <input id="pre_btn1" onclick="prev_step1()" type="button" value="Previous">
        <input id="next_btn2" name="next" onclick="validate_step2()" type="button" value="Next">
    </fieldset>

    <fieldset id="third">
        <h5 class="title">Event Details</h5>

        <div class="form-group">
            @Html.LabelFor(model => model.NoTables, htmlAttributes: new { @class = "control-label col-md-2" })
            @Html.EditorFor(model => model.NoTables, new { htmlAttributes = new { @class = "form-control",@id="NoOfTables" } })
            @Html.ValidationMessageFor(model => model.NoTables, "", new { @class = "text-danger" })
            <p id="NoTablesH" class="hidden">Please enter the number of tables</p>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Parking, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="checkbox">
                @Html.EditorFor(model => model.Parking, new { htmlAttributes = new { @id = "parking" } })
                @Html.ValidationMessageFor(model => model.Parking, "", new { @class = "text-danger" })
                <p id="ParkingH" class="hidden">Please enter the parking info</p>
            </div>
         
            <input id="pre_btn2" onclick="prev_step2()" type="button" value="Previous">
            <input type="submit" value="Create" class="btn bg-imperial" style="color:#9fffcb;" />
        </div>
    </fieldset>


</div>
}

<div>
    @Html.ActionLink("Back to List", "Back")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
